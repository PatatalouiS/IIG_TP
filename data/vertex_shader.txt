#version 410 core
layout (location = 0) in vec3 position;
layout (location = 1) in vec3 inormal;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
out vec3 glpos;
out vec3 normal;
out vec3 fragment_position;
void main()
{
    // Note that we read the multiplication from right to left
    gl_Position = projection * view * model * vec4(position, 1.0f);
    fragment_position = vec3(model * vec4(position, 1.0));
    glpos = position;
    normal = mat3(transpose(inverse(model))) * inormal;;
}
